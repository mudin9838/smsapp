@{
    var DropDownListParent = new Syncfusion.EJ2.DropDowns.DropDownList() { DataSource = ViewBag.ParentId, Query = "new ej.data.Query()", Fields = new Syncfusion.EJ2.DropDowns.DropDownListFieldSettings() { Value = "ParentId", Text = "ParentName" } };
    var DropDownListCategory = new Syncfusion.EJ2.DropDowns.DropDownList() { DataSource = ViewBag.CategoryId, Query = "new ej.data.Query()", Fields = new Syncfusion.EJ2.DropDowns.DropDownListFieldSettings() { Value = "CategoryId", Text = "CategoryName" } };
    var DropDownListSubCategory = new Syncfusion.EJ2.DropDowns.DropDownList() { DataSource = ViewBag.SubCategoryId, Query = "new ej.data.Query()", Fields = new Syncfusion.EJ2.DropDowns.DropDownListFieldSettings() { Value = "SubCategoryId", Text = "SubCategoryName" } };
    var DropDownListMeasurementUnit = new Syncfusion.EJ2.DropDowns.DropDownList() { DataSource = ViewBag.MeasurementUnitId, Query = "new ej.data.Query()", Fields = new Syncfusion.EJ2.DropDowns.DropDownListFieldSettings() { Value = "MeasurementUnitId", Text = "MeasurementUnitName" } };

}
<div class="control-section">
    <ejs-grid id="Grid" created="created" detailTemplate="#detailtemplate" allowPaging="true" actionComplete="actionComplete" allowSorting="true" allowResizing="true" allowReordering="true" toolbar="@(new List<string>() { "Search", "Add" , "Edit" , "Delete" , "Update" , "Cancel" , "ExcelExport" , "CsvExport" , "PdfExport","Print"  })" allowFiltering="true" allowSelection="true" allowExcelExport="true" allowPdfExport="true" toolbarClick="toolbarClick">
        <e-data-manager url="/DataGrid/UrlDataSource" insertUrl="/DataGrid/Insert" updateUrl="/DataGrid/Update" removeUrl="/DataGrid/Remove" adaptor="UrlAdaptor"></e-data-manager>
        <e-grid-filterSettings type="Menu"></e-grid-filterSettings>
        <e-grid-editSettings allowAdding="true" allowDeleting="true" allowEditing="true" mode="Dialog" template='#dialogtemplate' showConfirmDialog="true" showDeleteConfirmDialog="true"></e-grid-editSettings>
        <e-grid-selectionsettings type="Single"></e-grid-selectionsettings>
        <e-grid-pagesettings pageCount="10"></e-grid-pagesettings>

        <e-grid-columns>
            <e-grid-column type="checkbox" width="50"></e-grid-column>
            <e-grid-column field="StockId" headerText="StockId" isPrimaryKey="true" isIdentity="true" visible="false"></e-grid-column>
            <e-grid-column field="ParentId" foreignKeyField="ParentId" headerText="ቅ/ፅ/ቤት" foreignKeyValue="ParentName" dataSource="ViewBag.ParentId" editType="dropdownedit" edit="new {@params = DropDownListParent }"></e-grid-column>
@*            <e-grid-column field="Serie" headerText="ሴሪ"></e-grid-column>
*@            <e-grid-column field="CategoryId" foreignKeyField="CategoryId" headerText="የእቃው መደብ" foreignKeyValue="CategoryName" dataSource="ViewBag.CategoryId" editType="dropdownedit" edit="new {@params = DropDownListCategory }"></e-grid-column>
            <e-grid-column field="SubCategoryId" foreignKeyField="SubCategoryId" headerText="የእቃው አይነት" foreignKeyValue="SubCategoryName" dataSource="ViewBag.SubCategoryId" editType="dropdownedit" edit="new {@params = DropDownListSubCategory }"></e-grid-column>
            <e-grid-column field="MeasurementUnitId" foreignKeyField="MeasurementUnitId" headerText="መለኪያ" foreignKeyValue="MeasurementUnitName" dataSource="ViewBag.MeasurementUnitId" editType="dropdownedit" edit="new {@params = DropDownListMeasurementUnit }"></e-grid-column>

            @*<e-grid-column field="Model" headerText="ሞዴል"></e-grid-column>
            <e-grid-column field="Quantity" id="Quantity" headerText="ብዛት" editType="numericedit"></e-grid-column>
            <e-grid-column field="EachPrice" id="EachPrice" headerText="ያንዱ ዋጋ" editType="numericedit"></e-grid-column>
            <e-grid-column field="Vat" id="Vat" headerText="ቫት" editType="numericedit"></e-grid-column>
            <e-grid-column field="TotalPrice" id="TotalPrice" headerText="የዋጋው ድምር" editType="numericedit"></e-grid-column>*@
            <e-grid-column field="RegisteredDate" headerText="የተመዘገበበት ቀን" editType="datepickeredit" format="yMd"></e-grid-column>

            @* <e-grid-column field="Entries"  headerText="Entries"></e-grid-column>
            <e-grid-column field="Outs"  headerText="Outs"></e-grid-column>*@
        </e-grid-columns>

    </ejs-grid>

</div>
<style type="text/css" class="cssStyles">
    .detailtable td {
        font-size: 13px;
        padding: 4px;
        max-width: 0;
        overflow: hidden;
        text-overflow: ellipsis;
        white-space: nowrap;
        font-weight: normal;
    }

</style>
<script src="https://ajax.googleapis.com/ajax/libs/jquery/3.6.4/jquery.min.js"></script>
<script src="~/js/custom.js"></script>
<script id='dialogtemplate' type="text/x-template">
    <div id="dialogTemp">
    </div>
</script>
<script type="text/x-template" id="detailtemplate">
    <table class="detailtable" width="100%">
        <colgroup>
            <col width="35%" />
            <col width="35%" />
            <col width="30%" />
        </colgroup>
        <tbody>
            <tr>
                <td>
                    <span style="font-weight: 500;">ሞዴል: </span> ${Model}
                </td>
               
                <td>
                       <span style="font-weight: 500;">ብዛት: </span> ${Quantity}
                </td>
            </tr>

 
            <tr>
                 <td>
                    <span style="font-weight: 500;">ሴሪ: </span> ${Serie}
                </td>
                <td>
                    <span style="font-weight: 500;">ያንዱ ዋጋ: </span> ${EachPrice}
                </td>
              
            </tr>
            <tr>
                 <td>
                </td>
                <td>
                    <span style="font-weight: 500;">ቫት(15%): </span> ${Vat}
                </td>

            </tr>
             <tr>
               <td></td>
                <td>
                    <span style="font-weight: 500;">የዋጋው ድምር: </span> ${TotalPrice}
                </td>
            </tr>
        </tbody>
    </table>
</script>






<br />


<script>
    function toolbarClick(args) {
        if (args.item.id === this.element.id + '_pdfexport') {
            this.pdfExport();
        }
        if (args.item.id === this.element.id + '_csvexport') {
            this.csvExport();
        }
        if (args.item.id === this.element.id + '_excelexport') {
            this.excelExport();
        }
    }
</script>
<script>
    function actionComplete(args) {

        if (args.requestType === 'beginEdit' || args.requestType === 'add') {

            let spinner = ej.popups.createSpinner({ target: args.dialog.element });
            ej.popups.showSpinner(args.dialog.element);
            if (args.requestType === 'beginEdit') {
                var ajax = new ej.base.Ajax({
                    url: "@Url.Action("EditPartial", "DataGrid")", //render the partial view
                    type: "POST",
                    contentType: "application/json",
                    data: JSON.stringify({ value: args.rowData })
                });
                ajax.send().then(function (data) {
                    appendElement(data, args.form); //Render the edit form with selected record
                    args.form.elements.namedItem('StockId').focus();
                    ej.popups.hideSpinner(args.dialog.element);

                }).catch(function (xhr) {
                    console.log(xhr);
                    ej.popups.hideSpinner(args.dialog.element);
                });

            }
            if (args.requestType === 'add') {
                var ajax = new ej.base.Ajax({
                    url: "@Url.Action("AddPartial", "DataGrid")", //render the partial view
                    type: "POST",
                    contentType: "application/json",
                    data: JSON.stringify({ value: args.rowData })

                });
                ajax.send().then(function (data) {
                    appendElement(data, args.form); //Render the edit form with selected record
                    args.form.elements.namedItem('StockId').focus();
                    ej.popups.hideSpinner(args.dialog.element);
                }).catch(function (xhr) {
                    console.log(xhr);
                    ej.popups.hideSpinner(args.dialog.element);
                });

            }

        }


    }

  

    function appendElement(elementString, form) {
        form.querySelector("#dialogTemp").innerHTML = elementString;
        //form.ej2_instances[0].addRules('CustomerId', {required: true, number: true });
        //form.ej2_instances[0].addRules('ParentId', {required: true });

        form.ej2_instances[0].addRules('Quantity', { required: true });
        form.ej2_instances[0].addRules('RegisteredDate', { required: true });
        form.ej2_instances[0].refresh();  // refresh method of the formObj
        var script = document.createElement('script');
        script.type = "text/javascript";
        var serverScript = form.querySelector("#dialogTemp").querySelector('script');
        script.textContent = serverScript.innerHTML;
        document.head.appendChild(script);
        serverScript.remove();
    }

  
</script>
<script type="text/javascript">
    function created(args) {
        // extending the default UrlAdaptor
        class CustomAdaptor extends ej.data.UrlAdaptor {
            processResponse(data, ds, query, xhr, request, changes) {
                if (!ej.base.isNullOrUndefined(data.message)) {
                    alert(data.message);
                }
                if (!ej.base.isNullOrUndefined(data.data))
                    return data.data;
                else
                    return data;
            }
        }
        var grid = document.querySelector('#Grid').ej2_instances[0];
        grid.dataSource = new ej.data.DataManager({
            url: "/DataGrid/UrlDatasource",
            insertUrl: "/DataGrid/Insert",
            updateUrl: "/DataGrid/Update",
            removeUrl: "/DataGrid/Remove",
            adaptor: new CustomAdaptor()
        });
    }
</script>
<script src="https://ajax.googleapis.com/ajax/libs/jquery/3.6.4/jquery.min.js"></script>
<script>
    function countrychange() {
        // disable the state DropDownList
        var state = document.getElementById('SubCategoryId').ej2_instances[0];
        var city = document.getElementById('MeasurementUnitId').ej2_instances[0];
        var country = document.getElementById('CategoryId').ej2_instances[0];
        state.enabled = true;
        //frame the query based on selected value in country DropDownList.
        var tempQuery = new ej.data.Query().where('CategoryId', 'equal', country.value);
        // set the framed query based on selected value in country DropDownList.
        state.query = tempQuery;
        // set null value to state DropDownList text property
        state.text = null;
        //  bind the property changes to state DropDownList
        state.dataBind();
        // set null value to city DropDownList text property
        city.text = null;
        // disable the city DropDownList
        //city.enabled = false;
        // bind the property changes to City DropDownList
        city.dataBind();
    }
    function statechange() {
        var city = document.getElementById('MeasurementUnitId').ej2_instances[0];
        var state = document.getElementById('SubCategoryId').ej2_instances[0];
        city.enabled = true;
        //Query the data source based on state DropDownList selected value
        var tempQuery = new ej.data.Query().where('SubCategoryId', 'equal', state.value);
        //set the framed query based on selected value in city DropDownList.
        city.query = tempQuery;
        //clear the existing selection
        city.text = null;
        //bind the property change to city DropDownList
        city.dataBind();

    }

    function citychange() {
        var model = document.getElementById('Model');
        var state = document.getElementById('SubCategoryId');
        model.value = state.value;
    }
</script>
<script src="~/js/custom.js"></script>

<script>
  
  
    function changeValues() {

        var quantity = document.getElementById('Quantity');
        var vat = document.getElementById('Vat');
        var eachprice = document.getElementById('EachPrice');
        var totalprice = document.getElementById('TotalPrice');


        var vatValue = eachprice.value * quantity.value * 0.15;
        var totalPriceWithVat = quantity.value * eachprice.value + vatValue;
        vat.value = vatValue;
        totalprice.value = totalPriceWithVat;

    }
    

</script>
